# Build com o xk6 via container:
# https://github.com/grafana/xk6#docker

# Releases do k6
# https://github.com/grafana/k6/releases

# Extensão do k6 para SQL Server, Postgres e MySQL:
# https://github.com/grafana/xk6-sql

# Extensão com o driver do k6 para MySQL:
# https://github.com/grafana/xk6-sql-driver-mysql

# Geração de dados fake com k6:
# https://github.com/grafana/xk6-faker

# Extensão JavaScript para geração do report HTML:
# https://code.benco.io/k6-reporter/

trigger:
- main

resources:
  containers:
    - container: mysql
      image: mysql:9.0
      networks: 
      - integrationtests
      env:
        MYSQL_ROOT_PASSWORD: "MySql2025!"
        MYSQL_DATABASE: "dbtests"
      ports:
        - 32000:3306

variables:
  loadTestsScript: 'mysql_test.js'
  htmtReportK6: 'db-loadtests.html'
  testsDirectory: './tests'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

  # Variáveis para execução dos testes de carga
  databaseTestsConnection: 'root:MySql2025!@tcp(127.0.0.1:32000)/dbtests'
  path_ScriptsMySQL: './scripts/dbtests.sql'

  # Versoes das ferramentas do k6:
  xk6Version: 'v1.1.0'
  xk6SqlVersion: 'v1.0.5'
  xk6SqlDriverMySql: 'v0.2.1'
  xk6FakerVersion: 'v0.4.4'

stages:
- stage: Tests
  displayName: Tests stage
  variables:
  - group: k6-db-configurations
  jobs:
  - job: Tests
    displayName: Tests
    pool:
      vmImage: $(vmImageName)
    services:
      mysql: mysql
    steps:
    - task: replacetokens@5
      inputs:
        targetFiles: '$(testsDirectory)/$(loadTestsScript)'
        encoding: 'auto'
        tokenPattern: 'default'
        writeBOM: true
        actionOnMissing: 'warn'
        keepToken: false
        actionOnNoFiles: 'continue'
        enableTransforms: false
        enableRecursion: false
        useLegacyPattern: false
        enableTelemetry: true
      displayName: 'Atualizar script de testes com após replaces'
    - script: |
        cd $(testsDirectory)
        cat $(loadTestsScript)
      displayName: 'Exibir conteúdo do script de testes'
    - script: |
        docker images
        echo ''
        docker container ls
        echo 'Aguardar por 10s a subida da instancia do PostgreSQL...'
        sleep 10s
        echo ''
        docker container ls
      displayName: Exibir imagens e container em execução
    - script: |
        echo '*** Exibir versao do MySQL que sera utilizada ***'
        echo ''
        /usr/bin/mysql --host=0.0.0.0 --port=32000 --user=root --password=MySql2025! --protocol=tcp -e 'SELECT VERSION();'
      displayName: Exibir versao do MySQL que sera utilizada
    - script: |
        cd ./scripts
        /usr/bin/mysql --host=0.0.0.0 --port=32000 --user=root --password=MySql2025! --protocol=tcp dbtests < dbtests.sql
      displayName: Criar tabela para testes na base dbtests
    - script: |
        cd $(testsDirectory)
        docker run --rm -u "$(id -u):$(id -g)" -v "${PWD}:/xk6" grafana/xk6 build $(xk6Version) \
          --with github.com/grafana/xk6-sql@$(xk6SqlVersion) \
          --with github.com/grafana/xk6-faker@$(xk6FakerVersion) \
          --with github.com/grafana/xk6-sql-driver-mysql@$(xk6SqlDriverMySql)
      displayName: Gerar o executável do k6 com suporte a bancos relacionais via container do xk6
    - script: |
        docker images
        echo ''
        docker ps -a
      displayName: Exibir imagens e containers apos build do k6
    - script: |
         cd $(testsDirectory)
         ./k6
      displayName: Testar executável do k6
    - script: |
         cd $(testsDirectory)
         pwd
         ls
         ./k6 run $(loadTestsScript) --vus $(ConcurrentUsers) --iterations $(Iterations)
      displayName: Executar script de testes do k6
    - script: |
        echo '*** Quantidade de registros gerados ***'
        /usr/bin/mysql --host=0.0.0.0 --port=32000 --user=root --password=MySql2025! --protocol=tcp dbtests <<< "SELECT COUNT(1) AS QtdRegistros FROM Accounts;"
        echo ''
        echo '*** Amostragem com dados dos testes: $(SampleCount) registro(s) ***'
        /usr/bin/mysql --host=0.0.0.0 --port=32000 --user=root --password=MySql2025! --protocol=tcp dbtests <<< "SELECT * FROM Accounts ORDER BY Id LIMIT $(SampleCount) \G;"
      displayName: Exibir amostragem de registros criados na base DBTests
    - script: |
        cd $(testsDirectory)
        pwd
        echo ' '
        echo '** Arquivos/diretórios após a execução dos testes:'
        ls
      displayName: Exibir arquivos gerados apos execucao dos testes
    - task: PublishHtmlReport@1
      condition: always()
      inputs:
        reportDir: $(testsDirectory)/$(htmtReportK6)
      displayName: Publicar relatório com os resultados dos testes